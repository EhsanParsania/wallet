{
	"id": "ea400871fc83a8230d54b5b8a79c8fe8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Wallet/Wallet.sol": {
				"content": "/* SPDX-License-Identifier: MIT OR Apache-2.0 */\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Ownable.sol\";\r\n\r\ncontract Wallet is Ownable {\r\n    uint256 internal savedAmount = 0;\r\n\r\n    //write method\r\n    function addCoin(uint256 _amount) external returns (uint256, uint256) {\r\n        savedAmount += _amount;\r\n        return (_amount, savedAmount);\r\n    }\r\n\r\n    //write method\r\n    function resetWallet() external {\r\n        savedAmount = 0;\r\n    }\r\n\r\n    //read method\r\n    function getCoinAmount() external view returns (uint256) {\r\n        return savedAmount;\r\n    }\r\n\r\n    modifier theOwner() {\r\n        require(\r\n            _msgSender() == owner() || owner() == tx.origin,\r\n            \"To call this method you have to be owner or subAdmin!\"\r\n        );\r\n        _;\r\n    }\r\n}\r\n"
			},
			"Wallet/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"Wallet/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Wallet/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Wallet/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Wallet/Context.sol\":{\"keccak256\":\"0x4ef918a45da5af647da6ce04615aafd7c636497c968d8eae7fa557101f07e67d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b664f0366298d10dc783ad4d33558b633a97295a6f23bfca33398cc0645116ed\",\"dweb:/ipfs/QmNZVDD2dHNR7ARTgEg5XohUupG2qxLLt2GJaJ4myRjUiY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Wallet/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Wallet/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Wallet/Context.sol\":{\"keccak256\":\"0x4ef918a45da5af647da6ce04615aafd7c636497c968d8eae7fa557101f07e67d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b664f0366298d10dc783ad4d33558b633a97295a6f23bfca33398cc0645116ed\",\"dweb:/ipfs/QmNZVDD2dHNR7ARTgEg5XohUupG2qxLLt2GJaJ4myRjUiY\"]},\"Wallet/Ownable.sol\":{\"keccak256\":\"0x1623c61bed606f06b9059c2eea386a6424c204107e9f3f16d714e319fefcaac9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8963633e4f6d7f5efa3a35f4f13c6df27825dec8368efca8e792f7e26c85b3b\",\"dweb:/ipfs/QmRogzMVVpHPVrDCHFki8XoffYFvjhQ3D67Q1c51Quq22Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 28,
								"contract": "Wallet/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Wallet/Wallet.sol": {
				"Wallet": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addCoin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCoinAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "resetWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Wallet/Wallet.sol\":106:779  contract Wallet is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"Wallet/Wallet.sol\":171:172  0 */\n  0x00\n    /* \"Wallet/Wallet.sol\":140:172  uint256 internal savedAmount = 0 */\n  0x01\n  sstore\n    /* \"Wallet/Wallet.sol\":106:779  contract Wallet is Ownable {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Wallet/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"Wallet/Ownable.sol\":961:973  _msgSender() */\n  tag_5\n    /* \"Wallet/Ownable.sol\":961:971  _msgSender */\n  shl(0x20, tag_6)\n    /* \"Wallet/Ownable.sol\":961:973  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"Wallet/Ownable.sol\":942:960  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"Wallet/Ownable.sol\":942:974  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Wallet/Wallet.sol\":106:779  contract Wallet is Ownable {\r... */\n  jump(tag_8)\n    /* \"Wallet/Context.sol\":95:193  function _msgSender() internal view virtual returns (address) {\r... */\ntag_6:\n    /* \"Wallet/Context.sol\":148:155  address */\n  0x00\n    /* \"Wallet/Context.sol\":175:185  msg.sender */\n  caller\n    /* \"Wallet/Context.sol\":168:185  return msg.sender */\n  swap1\n  pop\n    /* \"Wallet/Context.sol\":95:193  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"Wallet/Ownable.sol\":2224:2415  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_7:\n    /* \"Wallet/Ownable.sol\":2298:2314  address oldOwner */\n  0x00\n    /* \"Wallet/Ownable.sol\":2317:2323  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Wallet/Ownable.sol\":2298:2323  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Wallet/Ownable.sol\":2343:2351  newOwner */\n  dup2\n    /* \"Wallet/Ownable.sol\":2334:2340  _owner */\n  0x00\n  dup1\n    /* \"Wallet/Ownable.sol\":2334:2351  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Wallet/Ownable.sol\":2398:2406  newOwner */\n  dup2\n    /* \"Wallet/Ownable.sol\":2367:2407  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Wallet/Ownable.sol\":2388:2396  oldOwner */\n  dup2\n    /* \"Wallet/Ownable.sol\":2367:2407  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Wallet/Ownable.sol\":2287:2415  {\r... */\n  pop\n    /* \"Wallet/Ownable.sol\":2224:2415  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"Wallet/Wallet.sol\":106:779  contract Wallet is Ownable {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Wallet/Wallet.sol\":106:779  contract Wallet is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1895e858\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x623e9ba6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa56793ae\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Wallet/Wallet.sol\":380:446  function resetWallet() external {\r... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"Wallet/Wallet.sol\":473:567  function getCoinAmount() external view returns (uint256) {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Wallet/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Wallet/Wallet.sol\":201:352  function addCoin(uint256 _amount) external returns (uint256, uint256) {\r... */\n    tag_6:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Wallet/Ownable.sol\":1863:2064  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_7:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"Wallet/Wallet.sol\":380:446  function resetWallet() external {\r... */\n    tag_9:\n        /* \"Wallet/Wallet.sol\":437:438  0 */\n      0x00\n        /* \"Wallet/Wallet.sol\":423:434  savedAmount */\n      0x01\n        /* \"Wallet/Wallet.sol\":423:438  savedAmount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Wallet/Wallet.sol\":380:446  function resetWallet() external {\r... */\n      jump\t// out\n        /* \"Wallet/Wallet.sol\":473:567  function getCoinAmount() external view returns (uint256) {\r... */\n    tag_11:\n        /* \"Wallet/Wallet.sol\":521:528  uint256 */\n      0x00\n        /* \"Wallet/Wallet.sol\":548:559  savedAmount */\n      sload(0x01)\n        /* \"Wallet/Wallet.sol\":541:559  return savedAmount */\n      swap1\n      pop\n        /* \"Wallet/Wallet.sol\":473:567  function getCoinAmount() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Wallet/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n    tag_15:\n        /* \"Wallet/Ownable.sol\":1109:1116  address */\n      0x00\n        /* \"Wallet/Ownable.sol\":1136:1142  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Wallet/Ownable.sol\":1129:1142  return _owner */\n      swap1\n      pop\n        /* \"Wallet/Ownable.sol\":1063:1150  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Wallet/Wallet.sol\":201:352  function addCoin(uint256 _amount) external returns (uint256, uint256) {\r... */\n    tag_21:\n        /* \"Wallet/Wallet.sol\":253:260  uint256 */\n      0x00\n        /* \"Wallet/Wallet.sol\":262:269  uint256 */\n      dup1\n        /* \"Wallet/Wallet.sol\":297:304  _amount */\n      dup3\n        /* \"Wallet/Wallet.sol\":282:293  savedAmount */\n      0x01\n      0x00\n        /* \"Wallet/Wallet.sol\":282:304  savedAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Wallet/Wallet.sol\":323:330  _amount */\n      dup3\n        /* \"Wallet/Wallet.sol\":332:343  savedAmount */\n      sload(0x01)\n        /* \"Wallet/Wallet.sol\":315:344  return (_amount, savedAmount) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Wallet/Wallet.sol\":201:352  function addCoin(uint256 _amount) external returns (uint256, uint256) {\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Wallet/Ownable.sol\":1863:2064  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_27:\n        /* \"Wallet/Ownable.sol\":1294:1306  _msgSender() */\n      tag_35\n        /* \"Wallet/Ownable.sol\":1294:1304  _msgSender */\n      tag_36\n        /* \"Wallet/Ownable.sol\":1294:1306  _msgSender() */\n      jump\t// in\n    tag_35:\n        /* \"Wallet/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Wallet/Ownable.sol\":1283:1290  owner() */\n      tag_37\n        /* \"Wallet/Ownable.sol\":1283:1288  owner */\n      tag_15\n        /* \"Wallet/Ownable.sol\":1283:1290  owner() */\n      jump\t// in\n    tag_37:\n        /* \"Wallet/Ownable.sol\":1283:1306  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Wallet/Ownable.sol\":1275:1343  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"Wallet/Ownable.sol\":1972:1973  0 */\n      0x00\n        /* \"Wallet/Ownable.sol\":1952:1974  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Wallet/Ownable.sol\":1952:1960  newOwner */\n      dup2\n        /* \"Wallet/Ownable.sol\":1952:1974  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Wallet/Ownable.sol\":1944:2017  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"Wallet/Ownable.sol\":2028:2056  _transferOwnership(newOwner) */\n      tag_45\n        /* \"Wallet/Ownable.sol\":2047:2055  newOwner */\n      dup2\n        /* \"Wallet/Ownable.sol\":2028:2046  _transferOwnership */\n      tag_46\n        /* \"Wallet/Ownable.sol\":2028:2056  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_45:\n        /* \"Wallet/Ownable.sol\":1863:2064  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Wallet/Context.sol\":95:193  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_36:\n        /* \"Wallet/Context.sol\":148:155  address */\n      0x00\n        /* \"Wallet/Context.sol\":175:185  msg.sender */\n      caller\n        /* \"Wallet/Context.sol\":168:185  return msg.sender */\n      swap1\n      pop\n        /* \"Wallet/Context.sol\":95:193  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Wallet/Ownable.sol\":2224:2415  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_46:\n        /* \"Wallet/Ownable.sol\":2298:2314  address oldOwner */\n      0x00\n        /* \"Wallet/Ownable.sol\":2317:2323  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Wallet/Ownable.sol\":2298:2323  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Wallet/Ownable.sol\":2343:2351  newOwner */\n      dup2\n        /* \"Wallet/Ownable.sol\":2334:2340  _owner */\n      0x00\n      dup1\n        /* \"Wallet/Ownable.sol\":2334:2351  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Wallet/Ownable.sol\":2398:2406  newOwner */\n      dup2\n        /* \"Wallet/Ownable.sol\":2367:2407  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Wallet/Ownable.sol\":2388:2396  oldOwner */\n      dup2\n        /* \"Wallet/Ownable.sol\":2367:2407  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Wallet/Ownable.sol\":2287:2415  {\r... */\n      pop\n        /* \"Wallet/Ownable.sol\":2224:2415  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_50:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_52\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_54:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_56\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_26:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":373:492   */\n    tag_59:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_62\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_50\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:961   */\n    tag_20:\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":740:742   */\n      0x20\n        /* \"#utility.yul\":728:737   */\n      dup3\n        /* \"#utility.yul\":719:726   */\n      dup5\n        /* \"#utility.yul\":715:738   */\n      sub\n        /* \"#utility.yul\":711:743   */\n      slt\n        /* \"#utility.yul\":708:827   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":746:825   */\n      tag_65\n      tag_61\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":708:827   */\n    tag_64:\n        /* \"#utility.yul\":866:867   */\n      0x00\n        /* \"#utility.yul\":891:944   */\n      tag_66\n        /* \"#utility.yul\":936:943   */\n      dup5\n        /* \"#utility.yul\":927:933   */\n      dup3\n        /* \"#utility.yul\":916:925   */\n      dup6\n        /* \"#utility.yul\":912:934   */\n      add\n        /* \"#utility.yul\":891:944   */\n      tag_54\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":881:944   */\n      swap2\n      pop\n        /* \"#utility.yul\":837:954   */\n      pop\n        /* \"#utility.yul\":632:961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":967:1085   */\n    tag_67:\n        /* \"#utility.yul\":1054:1078   */\n      tag_69\n        /* \"#utility.yul\":1072:1077   */\n      dup2\n        /* \"#utility.yul\":1054:1078   */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1049:1052   */\n      dup3\n        /* \"#utility.yul\":1042:1079   */\n      mstore\n        /* \"#utility.yul\":967:1085   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1457   */\n    tag_71:\n        /* \"#utility.yul\":1233:1236   */\n      0x00\n        /* \"#utility.yul\":1254:1321   */\n      tag_73\n        /* \"#utility.yul\":1318:1320   */\n      0x26\n        /* \"#utility.yul\":1313:1316   */\n      dup4\n        /* \"#utility.yul\":1254:1321   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1247:1321   */\n      swap2\n      pop\n        /* \"#utility.yul\":1330:1423   */\n      tag_75\n        /* \"#utility.yul\":1419:1422   */\n      dup3\n        /* \"#utility.yul\":1330:1423   */\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1448:1450   */\n      0x40\n        /* \"#utility.yul\":1443:1446   */\n      dup3\n        /* \"#utility.yul\":1439:1451   */\n      add\n        /* \"#utility.yul\":1432:1451   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1463:1829   */\n    tag_77:\n        /* \"#utility.yul\":1605:1608   */\n      0x00\n        /* \"#utility.yul\":1626:1693   */\n      tag_79\n        /* \"#utility.yul\":1690:1692   */\n      0x20\n        /* \"#utility.yul\":1685:1688   */\n      dup4\n        /* \"#utility.yul\":1626:1693   */\n      tag_74\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1619:1693   */\n      swap2\n      pop\n        /* \"#utility.yul\":1702:1795   */\n      tag_80\n        /* \"#utility.yul\":1791:1794   */\n      dup3\n        /* \"#utility.yul\":1702:1795   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1820:1822   */\n      0x20\n        /* \"#utility.yul\":1815:1818   */\n      dup3\n        /* \"#utility.yul\":1811:1823   */\n      add\n        /* \"#utility.yul\":1804:1823   */\n      swap1\n      pop\n        /* \"#utility.yul\":1463:1829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1835:1953   */\n    tag_82:\n        /* \"#utility.yul\":1922:1946   */\n      tag_84\n        /* \"#utility.yul\":1940:1945   */\n      dup2\n        /* \"#utility.yul\":1922:1946   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1917:1920   */\n      dup3\n        /* \"#utility.yul\":1910:1947   */\n      mstore\n        /* \"#utility.yul\":1835:1953   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2181   */\n    tag_17:\n        /* \"#utility.yul\":2052:2056   */\n      0x00\n        /* \"#utility.yul\":2090:2092   */\n      0x20\n        /* \"#utility.yul\":2079:2088   */\n      dup3\n        /* \"#utility.yul\":2075:2093   */\n      add\n        /* \"#utility.yul\":2067:2093   */\n      swap1\n      pop\n        /* \"#utility.yul\":2103:2174   */\n      tag_87\n        /* \"#utility.yul\":2171:2172   */\n      0x00\n        /* \"#utility.yul\":2160:2169   */\n      dup4\n        /* \"#utility.yul\":2156:2173   */\n      add\n        /* \"#utility.yul\":2147:2153   */\n      dup5\n        /* \"#utility.yul\":2103:2174   */\n      tag_67\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1959:2181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2606   */\n    tag_44:\n        /* \"#utility.yul\":2353:2357   */\n      0x00\n        /* \"#utility.yul\":2391:2393   */\n      0x20\n        /* \"#utility.yul\":2380:2389   */\n      dup3\n        /* \"#utility.yul\":2376:2394   */\n      add\n        /* \"#utility.yul\":2368:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2440:2449   */\n      dup2\n        /* \"#utility.yul\":2434:2438   */\n      dup2\n        /* \"#utility.yul\":2430:2450   */\n      sub\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2415:2424   */\n      dup4\n        /* \"#utility.yul\":2411:2428   */\n      add\n        /* \"#utility.yul\":2404:2451   */\n      mstore\n        /* \"#utility.yul\":2468:2599   */\n      tag_89\n        /* \"#utility.yul\":2594:2598   */\n      dup2\n        /* \"#utility.yul\":2468:2599   */\n      tag_71\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2460:2599   */\n      swap1\n      pop\n        /* \"#utility.yul\":2187:2606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2612:3031   */\n    tag_40:\n        /* \"#utility.yul\":2778:2782   */\n      0x00\n        /* \"#utility.yul\":2816:2818   */\n      0x20\n        /* \"#utility.yul\":2805:2814   */\n      dup3\n        /* \"#utility.yul\":2801:2819   */\n      add\n        /* \"#utility.yul\":2793:2819   */\n      swap1\n      pop\n        /* \"#utility.yul\":2865:2874   */\n      dup2\n        /* \"#utility.yul\":2859:2863   */\n      dup2\n        /* \"#utility.yul\":2855:2875   */\n      sub\n        /* \"#utility.yul\":2851:2852   */\n      0x00\n        /* \"#utility.yul\":2840:2849   */\n      dup4\n        /* \"#utility.yul\":2836:2853   */\n      add\n        /* \"#utility.yul\":2829:2876   */\n      mstore\n        /* \"#utility.yul\":2893:3024   */\n      tag_91\n        /* \"#utility.yul\":3019:3023   */\n      dup2\n        /* \"#utility.yul\":2893:3024   */\n      tag_77\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2885:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":2612:3031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3037:3259   */\n    tag_13:\n        /* \"#utility.yul\":3130:3134   */\n      0x00\n        /* \"#utility.yul\":3168:3170   */\n      0x20\n        /* \"#utility.yul\":3157:3166   */\n      dup3\n        /* \"#utility.yul\":3153:3171   */\n      add\n        /* \"#utility.yul\":3145:3171   */\n      swap1\n      pop\n        /* \"#utility.yul\":3181:3252   */\n      tag_93\n        /* \"#utility.yul\":3249:3250   */\n      0x00\n        /* \"#utility.yul\":3238:3247   */\n      dup4\n        /* \"#utility.yul\":3234:3251   */\n      add\n        /* \"#utility.yul\":3225:3231   */\n      dup5\n        /* \"#utility.yul\":3181:3252   */\n      tag_82\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":3037:3259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3265:3597   */\n    tag_23:\n        /* \"#utility.yul\":3386:3390   */\n      0x00\n        /* \"#utility.yul\":3424:3426   */\n      0x40\n        /* \"#utility.yul\":3413:3422   */\n      dup3\n        /* \"#utility.yul\":3409:3427   */\n      add\n        /* \"#utility.yul\":3401:3427   */\n      swap1\n      pop\n        /* \"#utility.yul\":3437:3508   */\n      tag_95\n        /* \"#utility.yul\":3505:3506   */\n      0x00\n        /* \"#utility.yul\":3494:3503   */\n      dup4\n        /* \"#utility.yul\":3490:3507   */\n      add\n        /* \"#utility.yul\":3481:3487   */\n      dup6\n        /* \"#utility.yul\":3437:3508   */\n      tag_82\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3518:3590   */\n      tag_96\n        /* \"#utility.yul\":3586:3588   */\n      0x20\n        /* \"#utility.yul\":3575:3584   */\n      dup4\n        /* \"#utility.yul\":3571:3589   */\n      add\n        /* \"#utility.yul\":3562:3568   */\n      dup5\n        /* \"#utility.yul\":3518:3590   */\n      tag_82\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3265:3597   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3684:3853   */\n    tag_74:\n        /* \"#utility.yul\":3768:3779   */\n      0x00\n        /* \"#utility.yul\":3802:3808   */\n      dup3\n        /* \"#utility.yul\":3797:3800   */\n      dup3\n        /* \"#utility.yul\":3790:3809   */\n      mstore\n        /* \"#utility.yul\":3842:3846   */\n      0x20\n        /* \"#utility.yul\":3837:3840   */\n      dup3\n        /* \"#utility.yul\":3833:3847   */\n      add\n        /* \"#utility.yul\":3818:3847   */\n      swap1\n      pop\n        /* \"#utility.yul\":3684:3853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3859:4164   */\n    tag_33:\n        /* \"#utility.yul\":3899:3902   */\n      0x00\n        /* \"#utility.yul\":3918:3938   */\n      tag_101\n        /* \"#utility.yul\":3936:3937   */\n      dup3\n        /* \"#utility.yul\":3918:3938   */\n      tag_85\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3913:3938   */\n      swap2\n      pop\n        /* \"#utility.yul\":3952:3972   */\n      tag_102\n        /* \"#utility.yul\":3970:3971   */\n      dup4\n        /* \"#utility.yul\":3952:3972   */\n      tag_85\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":3947:3972   */\n      swap3\n      pop\n        /* \"#utility.yul\":4106:4107   */\n      dup3\n        /* \"#utility.yul\":4038:4104   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4034:4108   */\n      sub\n        /* \"#utility.yul\":4031:4032   */\n      dup3\n        /* \"#utility.yul\":4028:4109   */\n      gt\n        /* \"#utility.yul\":4025:4132   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":4112:4130   */\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":4025:4132   */\n    tag_103:\n        /* \"#utility.yul\":4156:4157   */\n      dup3\n        /* \"#utility.yul\":4153:4154   */\n      dup3\n        /* \"#utility.yul\":4149:4158   */\n      add\n        /* \"#utility.yul\":4142:4158   */\n      swap1\n      pop\n        /* \"#utility.yul\":3859:4164   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4170:4266   */\n    tag_70:\n        /* \"#utility.yul\":4207:4214   */\n      0x00\n        /* \"#utility.yul\":4236:4260   */\n      tag_107\n        /* \"#utility.yul\":4254:4259   */\n      dup3\n        /* \"#utility.yul\":4236:4260   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":4225:4260   */\n      swap1\n      pop\n        /* \"#utility.yul\":4170:4266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4272:4398   */\n    tag_108:\n        /* \"#utility.yul\":4309:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4391   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4342:4347   */\n      dup3\n        /* \"#utility.yul\":4338:4392   */\n      and\n        /* \"#utility.yul\":4327:4392   */\n      swap1\n      pop\n        /* \"#utility.yul\":4272:4398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4404:4481   */\n    tag_85:\n        /* \"#utility.yul\":4441:4448   */\n      0x00\n        /* \"#utility.yul\":4470:4475   */\n      dup2\n        /* \"#utility.yul\":4459:4475   */\n      swap1\n      pop\n        /* \"#utility.yul\":4404:4481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4487:4667   */\n    tag_105:\n        /* \"#utility.yul\":4535:4612   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4532:4533   */\n      0x00\n        /* \"#utility.yul\":4525:4613   */\n      mstore\n        /* \"#utility.yul\":4632:4636   */\n      0x11\n        /* \"#utility.yul\":4629:4630   */\n      0x04\n        /* \"#utility.yul\":4622:4637   */\n      mstore\n        /* \"#utility.yul\":4656:4660   */\n      0x24\n        /* \"#utility.yul\":4653:4654   */\n      0x00\n        /* \"#utility.yul\":4646:4661   */\n      revert\n        /* \"#utility.yul\":4796:4913   */\n    tag_61:\n        /* \"#utility.yul\":4905:4906   */\n      0x00\n        /* \"#utility.yul\":4902:4903   */\n      dup1\n        /* \"#utility.yul\":4895:4907   */\n      revert\n        /* \"#utility.yul\":4919:5144   */\n    tag_76:\n        /* \"#utility.yul\":5059:5093   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5047:5053   */\n      dup3\n        /* \"#utility.yul\":5043:5057   */\n      add\n        /* \"#utility.yul\":5036:5094   */\n      mstore\n        /* \"#utility.yul\":5128:5136   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5123:5125   */\n      0x20\n        /* \"#utility.yul\":5115:5121   */\n      dup3\n        /* \"#utility.yul\":5111:5126   */\n      add\n        /* \"#utility.yul\":5104:5137   */\n      mstore\n        /* \"#utility.yul\":4919:5144   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5150:5332   */\n    tag_81:\n        /* \"#utility.yul\":5290:5324   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5286:5287   */\n      0x00\n        /* \"#utility.yul\":5278:5284   */\n      dup3\n        /* \"#utility.yul\":5274:5288   */\n      add\n        /* \"#utility.yul\":5267:5325   */\n      mstore\n        /* \"#utility.yul\":5150:5332   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5338:5460   */\n    tag_53:\n        /* \"#utility.yul\":5411:5435   */\n      tag_118\n        /* \"#utility.yul\":5429:5434   */\n      dup2\n        /* \"#utility.yul\":5411:5435   */\n      tag_70\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":5404:5409   */\n      dup2\n        /* \"#utility.yul\":5401:5436   */\n      eq\n        /* \"#utility.yul\":5391:5454   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":5450:5451   */\n      0x00\n        /* \"#utility.yul\":5447:5448   */\n      dup1\n        /* \"#utility.yul\":5440:5452   */\n      revert\n        /* \"#utility.yul\":5391:5454   */\n    tag_119:\n        /* \"#utility.yul\":5338:5460   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5466:5588   */\n    tag_57:\n        /* \"#utility.yul\":5539:5563   */\n      tag_121\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5539:5563   */\n      tag_85\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":5532:5537   */\n      dup2\n        /* \"#utility.yul\":5529:5564   */\n      eq\n        /* \"#utility.yul\":5519:5582   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":5578:5579   */\n      0x00\n        /* \"#utility.yul\":5575:5576   */\n      dup1\n        /* \"#utility.yul\":5568:5580   */\n      revert\n        /* \"#utility.yul\":5519:5582   */\n    tag_122:\n        /* \"#utility.yul\":5466:5588   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cdb586ba2c96de71dc19eb79ebce71d70ddbe1ed53e9b14cecf3f4bf97277fc764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": 55,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_110": {
									"entryPoint": 63,
									"id": 110,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600060015534801561001557600080fd5b5061003261002761003760201b60201c565b61003f60201b60201c565b610103565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610653806101126000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631895e8581461005c578063623e9ba6146100665780638da5cb5b14610084578063a56793ae146100a2578063f2fde38b146100d3575b600080fd5b6100646100ef565b005b61006e6100f9565b60405161007b919061045c565b60405180910390f35b61008c610103565b6040516100999190610401565b60405180910390f35b6100bc60048036038101906100b79190610370565b61012c565b6040516100ca929190610477565b60405180910390f35b6100ed60048036038101906100e89190610343565b610155565b005b6000600181905550565b6000600154905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080826001600082825461014191906104b1565b925050819055508260015491509150915091565b61015d61024d565b73ffffffffffffffffffffffffffffffffffffffff1661017b610103565b73ffffffffffffffffffffffffffffffffffffffff16146101d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c89061043c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102389061041c565b60405180910390fd5b61024a81610255565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610328816105ef565b92915050565b60008135905061033d81610606565b92915050565b60006020828403121561035957610358610572565b5b600061036784828501610319565b91505092915050565b60006020828403121561038657610385610572565b5b60006103948482850161032e565b91505092915050565b6103a681610507565b82525050565b60006103b96026836104a0565b91506103c482610577565b604082019050919050565b60006103dc6020836104a0565b91506103e7826105c6565b602082019050919050565b6103fb81610539565b82525050565b6000602082019050610416600083018461039d565b92915050565b60006020820190508181036000830152610435816103ac565b9050919050565b60006020820190508181036000830152610455816103cf565b9050919050565b600060208201905061047160008301846103f2565b92915050565b600060408201905061048c60008301856103f2565b61049960208301846103f2565b9392505050565b600082825260208201905092915050565b60006104bc82610539565b91506104c783610539565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104fc576104fb610543565b5b828201905092915050565b600061051282610519565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6105f881610507565b811461060357600080fd5b50565b61060f81610539565b811461061a57600080fd5b5056fea2646970667358221220cdb586ba2c96de71dc19eb79ebce71d70ddbe1ed53e9b14cecf3f4bf97277fc764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32 PUSH2 0x27 PUSH2 0x37 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x103 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x653 DUP1 PUSH2 0x112 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1895E858 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x623E9BA6 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA56793AE EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x370 JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP3 SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x24D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B PUSH2 0x103 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24A DUP2 PUSH2 0x255 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x328 DUP2 PUSH2 0x5EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33D DUP2 PUSH2 0x606 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359 JUMPI PUSH2 0x358 PUSH2 0x572 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x367 DUP5 DUP3 DUP6 ADD PUSH2 0x319 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x386 JUMPI PUSH2 0x385 PUSH2 0x572 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x394 DUP5 DUP3 DUP6 ADD PUSH2 0x32E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A6 DUP2 PUSH2 0x507 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9 PUSH1 0x26 DUP4 PUSH2 0x4A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C4 DUP3 PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC PUSH1 0x20 DUP4 PUSH2 0x4A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E7 DUP3 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FB DUP2 PUSH2 0x539 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x416 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x435 DUP2 PUSH2 0x3AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x455 DUP2 PUSH2 0x3CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x471 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x48C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC DUP3 PUSH2 0x539 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C7 DUP4 PUSH2 0x539 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0x543 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP3 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5F8 DUP2 PUSH2 0x507 JUMP JUMPDEST DUP2 EQ PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x60F DUP2 PUSH2 0x539 JUMP JUMPDEST DUP2 EQ PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xB5 DUP7 0xBA 0x2C SWAP7 0xDE PUSH18 0xDC19EB79EBCE71D70DDBE1ED53E9B14CECF3 DELEGATECALL 0xBF SWAP8 0x27 PUSH32 0xC764736F6C634300080700330000000000000000000000000000000000000000 ",
							"sourceMap": "106:673:2:-:0;;;171:1;140:32;;106:673;;;;;;;;;;942:32:1;961:12;:10;;;:12;;:::i;:::-;942:18;;;:32;;:::i;:::-;106:673:2;;95:98:0;148:7;175:10;168:17;;95:98;:::o;2224:191:1:-;2298:16;2317:6;;;;;;;;;;;2298:25;;2343:8;2334:6;;:17;;;;;;;;;;;;;;;;;;2398:8;2367:40;;2388:8;2367:40;;;;;;;;;;;;2287:128;2224:191;:::o;106:673:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_10": {
									"entryPoint": 589,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_110": {
									"entryPoint": 597,
									"id": 110,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addCoin_137": {
									"entryPoint": 300,
									"id": 137,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getCoinAmount_153": {
									"entryPoint": 249,
									"id": 153,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_53": {
									"entryPoint": 259,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@resetWallet_145": {
									"entryPoint": 239,
									"id": 145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_90": {
									"entryPoint": 341,
									"id": 90,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5591:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:3",
														"type": ""
													}
												],
												"src": "152:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:3"
															},
															"nodeType": "YulIf",
															"src": "373:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:3",
														"type": ""
													}
												],
												"src": "297:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "698:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "744:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "746:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "746:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "746:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "719:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "728:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "740:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "711:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:32:3"
															},
															"nodeType": "YulIf",
															"src": "708:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "837:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "852:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "866:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "856:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "881:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "916:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "927:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "912:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "936:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "891:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "881:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "668:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "679:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "691:6:3",
														"type": ""
													}
												],
												"src": "632:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1032:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1072:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1054:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1054:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1042:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1042:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1020:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1027:3:3",
														"type": ""
													}
												],
												"src": "967:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1237:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1247:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1313:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1318:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1254:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1247:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1419:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "1330:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1330:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1432:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1443:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1439:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1432:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1225:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1233:3:3",
														"type": ""
													}
												],
												"src": "1091:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1609:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1619:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1626:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1791:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1702:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1702:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1804:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1815:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1820:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1811:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1597:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1605:3:3",
														"type": ""
													}
												],
												"src": "1463:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1900:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1917:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1940:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1922:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1922:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1910:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1910:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1910:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1888:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1895:3:3",
														"type": ""
													}
												],
												"src": "1835:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2057:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2067:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2079:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2075:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2067:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2147:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2160:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2171:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2103:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2103:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2029:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2041:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2052:4:3",
														"type": ""
													}
												],
												"src": "1959:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2358:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2368:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2380:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2391:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2368:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2415:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2411:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2434:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2440:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2430:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2460:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2594:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2468:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2460:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2338:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2353:4:3",
														"type": ""
													}
												],
												"src": "2187:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2783:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2793:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2805:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2816:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2801:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2793:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2840:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2851:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2836:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2836:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2859:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2865:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2855:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2829:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2885:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3019:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2893:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2885:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2763:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2778:4:3",
														"type": ""
													}
												],
												"src": "2612:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3135:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3145:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3157:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3168:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3153:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3145:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3225:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3238:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3249:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3234:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3234:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3181:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3181:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3107:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3119:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3130:4:3",
														"type": ""
													}
												],
												"src": "3037:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3391:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3401:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3413:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3424:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3409:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3401:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3481:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3494:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3505:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3490:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3490:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3437:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3437:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3437:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3562:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3575:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3586:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3571:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3571:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3518:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3355:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3367:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3375:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3386:4:3",
														"type": ""
													}
												],
												"src": "3265:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3643:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3653:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3669:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3663:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3663:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3653:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3636:6:3",
														"type": ""
													}
												],
												"src": "3603:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3797:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3802:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3790:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3790:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3818:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3837:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3842:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3818:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3752:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3757:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3768:11:3",
														"type": ""
													}
												],
												"src": "3684:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3903:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3913:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3936:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3918:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3918:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3913:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3947:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3970:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3952:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3952:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3947:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4110:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4112:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4112:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4112:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4031:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4038:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4106:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4034:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4034:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4028:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4028:81:3"
															},
															"nodeType": "YulIf",
															"src": "4025:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4142:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4153:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4156:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4149:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4149:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4142:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3890:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3893:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3899:3:3",
														"type": ""
													}
												],
												"src": "3859:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4215:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4225:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4254:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4236:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4236:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4225:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4197:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4207:7:3",
														"type": ""
													}
												],
												"src": "4170:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4342:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4349:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4338:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4338:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4327:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4299:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4309:7:3",
														"type": ""
													}
												],
												"src": "4272:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4449:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4459:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4470:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4459:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4431:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4441:7:3",
														"type": ""
													}
												],
												"src": "4404:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4515:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4532:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4525:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4525:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4629:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4632:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4622:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4622:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4622:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4653:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4656:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4646:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4646:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4646:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4487:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4762:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4779:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4782:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4772:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4772:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4673:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4885:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4902:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4905:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4895:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4895:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4895:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4796:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5025:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5047:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5055:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5043:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5059:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5036:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5036:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5036:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5115:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5123:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5111:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5111:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5128:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5104:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5104:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5104:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5017:6:3",
														"type": ""
													}
												],
												"src": "4919:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5256:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5278:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5286:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5274:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5274:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5290:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5267:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5267:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5248:6:3",
														"type": ""
													}
												],
												"src": "5150:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5381:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5438:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5447:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5450:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5440:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5440:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5440:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5404:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5429:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5411:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5411:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5401:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5401:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5394:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:43:3"
															},
															"nodeType": "YulIf",
															"src": "5391:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5374:5:3",
														"type": ""
													}
												],
												"src": "5338:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5509:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5566:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5575:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5578:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5568:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5568:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5568:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5532:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5557:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5539:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5539:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5529:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5529:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5522:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5522:43:3"
															},
															"nodeType": "YulIf",
															"src": "5519:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5502:5:3",
														"type": ""
													}
												],
												"src": "5466:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80631895e8581461005c578063623e9ba6146100665780638da5cb5b14610084578063a56793ae146100a2578063f2fde38b146100d3575b600080fd5b6100646100ef565b005b61006e6100f9565b60405161007b919061045c565b60405180910390f35b61008c610103565b6040516100999190610401565b60405180910390f35b6100bc60048036038101906100b79190610370565b61012c565b6040516100ca929190610477565b60405180910390f35b6100ed60048036038101906100e89190610343565b610155565b005b6000600181905550565b6000600154905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080826001600082825461014191906104b1565b925050819055508260015491509150915091565b61015d61024d565b73ffffffffffffffffffffffffffffffffffffffff1661017b610103565b73ffffffffffffffffffffffffffffffffffffffff16146101d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c89061043c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610241576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102389061041c565b60405180910390fd5b61024a81610255565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610328816105ef565b92915050565b60008135905061033d81610606565b92915050565b60006020828403121561035957610358610572565b5b600061036784828501610319565b91505092915050565b60006020828403121561038657610385610572565b5b60006103948482850161032e565b91505092915050565b6103a681610507565b82525050565b60006103b96026836104a0565b91506103c482610577565b604082019050919050565b60006103dc6020836104a0565b91506103e7826105c6565b602082019050919050565b6103fb81610539565b82525050565b6000602082019050610416600083018461039d565b92915050565b60006020820190508181036000830152610435816103ac565b9050919050565b60006020820190508181036000830152610455816103cf565b9050919050565b600060208201905061047160008301846103f2565b92915050565b600060408201905061048c60008301856103f2565b61049960208301846103f2565b9392505050565b600082825260208201905092915050565b60006104bc82610539565b91506104c783610539565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104fc576104fb610543565b5b828201905092915050565b600061051282610519565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6105f881610507565b811461060357600080fd5b50565b61060f81610539565b811461061a57600080fd5b5056fea2646970667358221220cdb586ba2c96de71dc19eb79ebce71d70ddbe1ed53e9b14cecf3f4bf97277fc764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1895E858 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x623E9BA6 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA56793AE EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0xF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x370 JUMP JUMPDEST PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP3 SWAP2 SWAP1 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x4B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x24D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B PUSH2 0x103 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8 SWAP1 PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238 SWAP1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24A DUP2 PUSH2 0x255 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x328 DUP2 PUSH2 0x5EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33D DUP2 PUSH2 0x606 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359 JUMPI PUSH2 0x358 PUSH2 0x572 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x367 DUP5 DUP3 DUP6 ADD PUSH2 0x319 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x386 JUMPI PUSH2 0x385 PUSH2 0x572 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x394 DUP5 DUP3 DUP6 ADD PUSH2 0x32E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A6 DUP2 PUSH2 0x507 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9 PUSH1 0x26 DUP4 PUSH2 0x4A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C4 DUP3 PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DC PUSH1 0x20 DUP4 PUSH2 0x4A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E7 DUP3 PUSH2 0x5C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FB DUP2 PUSH2 0x539 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x416 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x39D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x435 DUP2 PUSH2 0x3AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x455 DUP2 PUSH2 0x3CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x471 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x48C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x499 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BC DUP3 PUSH2 0x539 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C7 DUP4 PUSH2 0x539 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0x543 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x512 DUP3 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x5F8 DUP2 PUSH2 0x507 JUMP JUMPDEST DUP2 EQ PUSH2 0x603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x60F DUP2 PUSH2 0x539 JUMP JUMPDEST DUP2 EQ PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xB5 DUP7 0xBA 0x2C SWAP7 0xDE PUSH18 0xDC19EB79EBCE71D70DDBE1ED53E9B14CECF3 DELEGATECALL 0xBF SWAP8 0x27 PUSH32 0xC764736F6C634300080700330000000000000000000000000000000000000000 ",
							"sourceMap": "106:673:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;380:66;;;:::i;:::-;;473:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1063:87:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;201:151:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1863:201:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;380:66:2;437:1;423:11;:15;;;;380:66::o;473:94::-;521:7;548:11;;541:18;;473:94;:::o;1063:87:1:-;1109:7;1136:6;;;;;;;;;;;1129:13;;1063:87;:::o;201:151:2:-;253:7;262;297;282:11;;:22;;;;;;;:::i;:::-;;;;;;;;323:7;332:11;;315:29;;;;201:151;;;:::o;1863:201:1:-;1294:12;:10;:12::i;:::-;1283:23;;:7;:5;:7::i;:::-;:23;;;1275:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1972:1:::1;1952:22;;:8;:22;;;;1944:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2028:28;2047:8;2028:18;:28::i;:::-;1863:201:::0;:::o;95:98:0:-;148:7;175:10;168:17;;95:98;:::o;2224:191:1:-;2298:16;2317:6;;;;;;;;;;;2298:25;;2343:8;2334:6;;:17;;;;;;;;;;;;;;;;;;2398:8;2367:40;;2388:8;2367:40;;;;;;;;;;;;2287:128;2224:191;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:::-;691:6;740:2;728:9;719:7;715:23;711:32;708:119;;;746:79;;:::i;:::-;708:119;866:1;891:53;936:7;927:6;916:9;912:22;891:53;:::i;:::-;881:63;;837:117;632:329;;;;:::o;967:118::-;1054:24;1072:5;1054:24;:::i;:::-;1049:3;1042:37;967:118;;:::o;1091:366::-;1233:3;1254:67;1318:2;1313:3;1254:67;:::i;:::-;1247:74;;1330:93;1419:3;1330:93;:::i;:::-;1448:2;1443:3;1439:12;1432:19;;1091:366;;;:::o;1463:::-;1605:3;1626:67;1690:2;1685:3;1626:67;:::i;:::-;1619:74;;1702:93;1791:3;1702:93;:::i;:::-;1820:2;1815:3;1811:12;1804:19;;1463:366;;;:::o;1835:118::-;1922:24;1940:5;1922:24;:::i;:::-;1917:3;1910:37;1835:118;;:::o;1959:222::-;2052:4;2090:2;2079:9;2075:18;2067:26;;2103:71;2171:1;2160:9;2156:17;2147:6;2103:71;:::i;:::-;1959:222;;;;:::o;2187:419::-;2353:4;2391:2;2380:9;2376:18;2368:26;;2440:9;2434:4;2430:20;2426:1;2415:9;2411:17;2404:47;2468:131;2594:4;2468:131;:::i;:::-;2460:139;;2187:419;;;:::o;2612:::-;2778:4;2816:2;2805:9;2801:18;2793:26;;2865:9;2859:4;2855:20;2851:1;2840:9;2836:17;2829:47;2893:131;3019:4;2893:131;:::i;:::-;2885:139;;2612:419;;;:::o;3037:222::-;3130:4;3168:2;3157:9;3153:18;3145:26;;3181:71;3249:1;3238:9;3234:17;3225:6;3181:71;:::i;:::-;3037:222;;;;:::o;3265:332::-;3386:4;3424:2;3413:9;3409:18;3401:26;;3437:71;3505:1;3494:9;3490:17;3481:6;3437:71;:::i;:::-;3518:72;3586:2;3575:9;3571:18;3562:6;3518:72;:::i;:::-;3265:332;;;;;:::o;3684:169::-;3768:11;3802:6;3797:3;3790:19;3842:4;3837:3;3833:14;3818:29;;3684:169;;;;:::o;3859:305::-;3899:3;3918:20;3936:1;3918:20;:::i;:::-;3913:25;;3952:20;3970:1;3952:20;:::i;:::-;3947:25;;4106:1;4038:66;4034:74;4031:1;4028:81;4025:107;;;4112:18;;:::i;:::-;4025:107;4156:1;4153;4149:9;4142:16;;3859:305;;;;:::o;4170:96::-;4207:7;4236:24;4254:5;4236:24;:::i;:::-;4225:35;;4170:96;;;:::o;4272:126::-;4309:7;4349:42;4342:5;4338:54;4327:65;;4272:126;;;:::o;4404:77::-;4441:7;4470:5;4459:16;;4404:77;;;:::o;4487:180::-;4535:77;4532:1;4525:88;4632:4;4629:1;4622:15;4656:4;4653:1;4646:15;4796:117;4905:1;4902;4895:12;4919:225;5059:34;5055:1;5047:6;5043:14;5036:58;5128:8;5123:2;5115:6;5111:15;5104:33;4919:225;:::o;5150:182::-;5290:34;5286:1;5278:6;5274:14;5267:58;5150:182;:::o;5338:122::-;5411:24;5429:5;5411:24;:::i;:::-;5404:5;5401:35;5391:63;;5450:1;5447;5440:12;5391:63;5338:122;:::o;5466:::-;5539:24;5557:5;5539:24;:::i;:::-;5532:5;5529:35;5519:63;;5578:1;5575;5568:12;5519:63;5466:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "323800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addCoin(uint256)": "infinite",
								"getCoinAmount()": "2437",
								"owner()": "2544",
								"resetWallet()": "5136",
								"transferOwnership(address)": "30789"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 106,
									"end": 779,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 171,
									"end": 172,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 172,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 172,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 961,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 961,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 961,
									"end": 971,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 961,
									"end": 973,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 961,
									"end": 973,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 961,
									"end": 973,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 942,
									"end": 960,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 942,
									"end": 960,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 942,
									"end": 974,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 106,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 95,
									"end": 193,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 95,
									"end": 193,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 148,
									"end": 155,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 185,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 168,
									"end": 185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 185,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 95,
									"end": 193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 95,
									"end": 193,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2224,
									"end": 2415,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2224,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2298,
									"end": 2314,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2317,
									"end": 2323,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2298,
									"end": 2323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2298,
									"end": 2323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2340,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2334,
									"end": 2340,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2334,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2398,
									"end": 2406,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2388,
									"end": 2396,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2367,
									"end": 2407,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2287,
									"end": 2415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2224,
									"end": 2415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2224,
									"end": 2415,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 106,
									"end": 779,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 106,
									"end": 779,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cdb586ba2c96de71dc19eb79ebce71d70ddbe1ed53e9b14cecf3f4bf97277fc764736f6c63430008070033",
									".code": [
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "1895E858"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "623E9BA6"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "A56793AE"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 106,
											"end": 779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 106,
											"end": 779,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 380,
											"end": 446,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 380,
											"end": 446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 380,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 380,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 380,
											"end": 446,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 380,
											"end": 446,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 380,
											"end": 446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 380,
											"end": 446,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 201,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 380,
											"end": 446,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 380,
											"end": 446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 437,
											"end": 438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 434,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 423,
											"end": 438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 423,
											"end": 438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 423,
											"end": 438,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 423,
											"end": 438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 380,
											"end": 446,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 473,
											"end": 567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 559,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 548,
											"end": 559,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 541,
											"end": 559,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 541,
											"end": 559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 567,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1142,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1150,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 201,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 253,
											"end": 260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 269,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 297,
											"end": 304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 282,
											"end": 293,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 282,
											"end": 293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 282,
											"end": 304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 282,
											"end": 304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 282,
											"end": 304,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 304,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 282,
											"end": 304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 282,
											"end": 304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 323,
											"end": 330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 332,
											"end": 343,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 332,
											"end": 343,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 315,
											"end": 344,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 315,
											"end": 344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 315,
											"end": 344,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 315,
											"end": 344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 201,
											"end": 352,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1294,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1294,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1306,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1275,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1944,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2047,
											"end": 2055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2028,
											"end": 2056,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2028,
											"end": 2056,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2028,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 2064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 95,
											"end": 193,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 95,
											"end": 193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 148,
											"end": 155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 185,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 168,
											"end": 185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 168,
											"end": 185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 193,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2224,
											"end": 2415,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2224,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2406,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2415,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 742,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 737,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 719,
											"end": 726,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 715,
											"end": 738,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 711,
											"end": 743,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 708,
											"end": 827,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 708,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 708,
											"end": 827,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 746,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 708,
											"end": 827,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 708,
											"end": 827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 936,
											"end": 943,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 916,
											"end": 925,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 912,
											"end": 934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 881,
											"end": 944,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 881,
											"end": 944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 837,
											"end": 954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 632,
											"end": 961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 632,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1085,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 967,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1072,
											"end": 1077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 1054,
											"end": 1078,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1054,
											"end": 1078,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 1054,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1052,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1042,
											"end": 1079,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 967,
											"end": 1085,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1457,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1091,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1236,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1318,
											"end": 1320,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1254,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1254,
											"end": 1321,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1254,
											"end": 1321,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1254,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1419,
											"end": 1422,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1330,
											"end": 1423,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1423,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1330,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1450,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1446,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1451,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1451,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1457,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1457,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1457,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1457,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1463,
											"end": 1829,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1463,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1605,
											"end": 1608,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1690,
											"end": 1692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1626,
											"end": 1693,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1626,
											"end": 1693,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1626,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1619,
											"end": 1693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1791,
											"end": 1794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1702,
											"end": 1795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1702,
											"end": 1795,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1702,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1815,
											"end": 1818,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1823,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1823,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1829,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1463,
											"end": 1829,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1835,
											"end": 1953,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1835,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1917,
											"end": 1920,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 1947,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1953,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1959,
											"end": 2181,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1959,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2067,
											"end": 2093,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2067,
											"end": 2093,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2103,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2169,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2156,
											"end": 2173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2147,
											"end": 2153,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2103,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2103,
											"end": 2174,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2174,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2103,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 2181,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 2181,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 2181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 2181,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 2181,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2187,
											"end": 2606,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2187,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2353,
											"end": 2357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2391,
											"end": 2393,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2394,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2430,
											"end": 2450,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2424,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2411,
											"end": 2428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2404,
											"end": 2451,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2594,
											"end": 2598,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2468,
											"end": 2599,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2468,
											"end": 2599,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2468,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2606,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2612,
											"end": 3031,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2818,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2814,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2793,
											"end": 2819,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2793,
											"end": 2819,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2865,
											"end": 2874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 2875,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 2852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 2876,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2893,
											"end": 3024,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2893,
											"end": 3024,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2893,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 3024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2885,
											"end": 3024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 3031,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 3031,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 3031,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2612,
											"end": 3031,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3037,
											"end": 3259,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3037,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3170,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3145,
											"end": 3171,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3145,
											"end": 3171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3249,
											"end": 3250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3247,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3181,
											"end": 3252,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3181,
											"end": 3252,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3181,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3259,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3259,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3265,
											"end": 3597,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3265,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3386,
											"end": 3390,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3422,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3427,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3427,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3505,
											"end": 3506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3503,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3490,
											"end": 3507,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3437,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3437,
											"end": 3508,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3437,
											"end": 3508,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3437,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3586,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3571,
											"end": 3589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3568,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3518,
											"end": 3590,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3518,
											"end": 3590,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3518,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3597,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3265,
											"end": 3597,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3684,
											"end": 3853,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3684,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3768,
											"end": 3779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3802,
											"end": 3808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3797,
											"end": 3800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3790,
											"end": 3809,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3847,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3853,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3853,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3859,
											"end": 4164,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3859,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3899,
											"end": 3902,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3936,
											"end": 3937,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3918,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3918,
											"end": 3938,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3918,
											"end": 3938,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3918,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3913,
											"end": 3938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3913,
											"end": 3938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3970,
											"end": 3971,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3952,
											"end": 3972,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3952,
											"end": 3972,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3952,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3947,
											"end": 3972,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3947,
											"end": 3972,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4107,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4038,
											"end": 4104,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4034,
											"end": 4108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4032,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4028,
											"end": 4109,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 4025,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4153,
											"end": 4154,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4149,
											"end": 4158,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4158,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 4164,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 4164,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 4164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 4164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3859,
											"end": 4164,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4170,
											"end": 4266,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4170,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4214,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4254,
											"end": 4259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4225,
											"end": 4260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4225,
											"end": 4260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4266,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4272,
											"end": 4398,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4272,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4309,
											"end": 4316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4391,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4342,
											"end": 4347,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4338,
											"end": 4392,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4272,
											"end": 4398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4272,
											"end": 4398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4272,
											"end": 4398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4272,
											"end": 4398,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4404,
											"end": 4481,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4404,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4441,
											"end": 4448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4475,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4459,
											"end": 4475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4459,
											"end": 4475,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4404,
											"end": 4481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4404,
											"end": 4481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4404,
											"end": 4481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4404,
											"end": 4481,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4487,
											"end": 4667,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4487,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4535,
											"end": 4612,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4532,
											"end": 4533,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4613,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4636,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4629,
											"end": 4630,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4622,
											"end": 4637,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4656,
											"end": 4660,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4646,
											"end": 4661,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4796,
											"end": 4913,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4796,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4895,
											"end": 4907,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5144,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 4919,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5059,
											"end": 5093,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5057,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5128,
											"end": 5136,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5123,
											"end": 5125,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5111,
											"end": 5126,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5137,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 5144,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5150,
											"end": 5332,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5150,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5290,
											"end": 5324,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5284,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5274,
											"end": 5288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5267,
											"end": 5325,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5150,
											"end": 5332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5150,
											"end": 5332,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5338,
											"end": 5460,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5338,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5429,
											"end": 5434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5411,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5404,
											"end": 5409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5401,
											"end": 5436,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5391,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5391,
											"end": 5454,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5440,
											"end": 5452,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5391,
											"end": 5454,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5391,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5338,
											"end": 5460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5338,
											"end": 5460,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5466,
											"end": 5588,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5466,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5539,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5539,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 5539,
											"end": 5563,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5539,
											"end": 5563,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5539,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5532,
											"end": 5537,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5519,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5519,
											"end": 5582,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5578,
											"end": 5579,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5576,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5580,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5519,
											"end": 5582,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5519,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5466,
											"end": 5588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5466,
											"end": 5588,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addCoin(uint256)": "a56793ae",
							"getCoinAmount()": "623e9ba6",
							"owner()": "8da5cb5b",
							"resetWallet()": "1895e858",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCoinAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resetWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Wallet/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Wallet/Context.sol\":{\"keccak256\":\"0x4ef918a45da5af647da6ce04615aafd7c636497c968d8eae7fa557101f07e67d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b664f0366298d10dc783ad4d33558b633a97295a6f23bfca33398cc0645116ed\",\"dweb:/ipfs/QmNZVDD2dHNR7ARTgEg5XohUupG2qxLLt2GJaJ4myRjUiY\"]},\"Wallet/Ownable.sol\":{\"keccak256\":\"0x1623c61bed606f06b9059c2eea386a6424c204107e9f3f16d714e319fefcaac9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8963633e4f6d7f5efa3a35f4f13c6df27825dec8368efca8e792f7e26c85b3b\",\"dweb:/ipfs/QmRogzMVVpHPVrDCHFki8XoffYFvjhQ3D67Q1c51Quq22Y\"]},\"Wallet/Wallet.sol\":{\"keccak256\":\"0xadd29652c9effad6f0442d6ec6eeb8db1450ee083418b665f2ce4bb3a4085da2\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://dd880b2ab1aef79bd5fb6aeb745b5cd5c906828e06e900506fb9223299f89b4c\",\"dweb:/ipfs/QmTHPGhjENYYZ5BUWCjZp2xuGiokMefN4zrYThDnv2Dsds\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 28,
								"contract": "Wallet/Wallet.sol:Wallet",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 119,
								"contract": "Wallet/Wallet.sol:Wallet",
								"label": "savedAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Wallet/Context.sol": {
				"ast": {
					"absolutePath": "Wallet/Context.sol",
					"exportedSymbols": {
						"Context": [
							20
						]
					},
					"id": 21,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nameLocation": "80:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "157:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "175:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "175:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "168:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "104:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "148:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "147:9:0"
									},
									"scope": 20,
									"src": "95:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "268:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "286:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "286:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "279:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "210:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "252:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "252:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:16:0"
									},
									"scope": 20,
									"src": "201:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 21,
							"src": "62:243:0",
							"usedErrors": []
						}
					],
					"src": "35:272:0"
				},
				"id": 0
			},
			"Wallet/Ownable.sol": {
				"ast": {
					"absolutePath": "Wallet/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							20
						],
						"Ownable": [
							111
						]
					},
					"id": 112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "Wallet/Context.sol",
							"file": "./Context.sol",
							"id": 23,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 112,
							"sourceUnit": 21,
							"src": "117:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 25,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "680:7:1"
									},
									"id": 26,
									"nodeType": "InheritanceSpecifier",
									"src": "680:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "144:505:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 111,
							"linearizedBaseContracts": [
								111,
								20
							],
							"name": "Ownable",
							"nameLocation": "669:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "711:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 111,
									"src": "695:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "695:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 34,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "753:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "784:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:1"
									},
									"src": "726:84:1"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "931:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 39,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "961:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "961:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 38,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "942:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "942:32:1"
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "818:93:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:2:1"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "931:0:1"
									},
									"scope": 111,
									"src": "917:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1118:32:1",
										"statements": [
											{
												"expression": {
													"id": 50,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1136:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 49,
												"id": 51,
												"nodeType": "Return",
												"src": "1129:13:1"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "990:67:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1072:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:2:1"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1109:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:9:1"
									},
									"scope": 111,
									"src": "1063:87:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1264:99:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 57,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "1283:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1283:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1294:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1294:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1283:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1308:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1275:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1275:68:1"
											},
											{
												"id": 65,
												"nodeType": "PlaceholderStatement",
												"src": "1354:1:1"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1158:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 67,
									"name": "onlyOwner",
									"nameLocation": "1252:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:1"
									},
									"src": "1243:120:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1933:131:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 76,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1952:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 79,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1972:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1964:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 77,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1964:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1964:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1952:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1976:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 75,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1944:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1944:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1944:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "2047:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2028:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2028:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "2028:28:1"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1716:141:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 73,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 72,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 67,
												"src": "1923:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1923:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1872:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1898:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1890:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1890:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1889:18:1"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:1"
									},
									"scope": 111,
									"src": "1863:201:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "2287:128:1",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2306:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 109,
														"src": "2298:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 96,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2298:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 99,
												"initialValue": {
													"id": 98,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "2317:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2298:25:1"
											},
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "2334:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 101,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "2343:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2334:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2334:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 105,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "2388:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 106,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2398:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 104,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2367:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "EmitStatement",
												"src": "2362:45:1"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2072:146:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2233:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2260:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "2252:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2251:18:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2287:0:1"
									},
									"scope": 111,
									"src": "2224:191:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 112,
							"src": "651:1767:1",
							"usedErrors": []
						}
					],
					"src": "90:2330:1"
				},
				"id": 1
			},
			"Wallet/Wallet.sol": {
				"ast": {
					"absolutePath": "Wallet/Wallet.sol",
					"exportedSymbols": {
						"Context": [
							20
						],
						"Ownable": [
							111
						],
						"Wallet": [
							173
						]
					},
					"id": 174,
					"license": "MIT OR Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 113,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "52:23:2"
						},
						{
							"absolutePath": "Wallet/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 174,
							"sourceUnit": 112,
							"src": "79:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 115,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 111,
										"src": "125:7:2"
									},
									"id": 116,
									"nodeType": "InheritanceSpecifier",
									"src": "125:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 173,
							"linearizedBaseContracts": [
								173,
								111,
								20
							],
							"name": "Wallet",
							"nameLocation": "115:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 119,
									"mutability": "mutable",
									"name": "savedAmount",
									"nameLocation": "157:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 173,
									"src": "140:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 117,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 118,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "171:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "271:81:2",
										"statements": [
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 128,
														"name": "savedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "282:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 129,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "297:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "282:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "282:22:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 132,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "323:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 133,
															"name": "savedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "332:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 134,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "322:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 127,
												"id": 135,
												"nodeType": "Return",
												"src": "315:29:2"
											}
										]
									},
									"functionSelector": "a56793ae",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addCoin",
									"nameLocation": "210:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "226:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "218:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "218:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "217:17:2"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "253:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "262:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:18:2"
									},
									"scope": 173,
									"src": "201:151:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "412:34:2",
										"statements": [
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "savedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "423:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "437:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "423:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "423:15:2"
											}
										]
									},
									"functionSelector": "1895e858",
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "resetWallet",
									"nameLocation": "389:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:2:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:0:2"
									},
									"scope": 173,
									"src": "380:66:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "530:37:2",
										"statements": [
											{
												"expression": {
													"id": 150,
													"name": "savedAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 119,
													"src": "548:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 149,
												"id": 151,
												"nodeType": "Return",
												"src": "541:18:2"
											}
										]
									},
									"functionSelector": "623e9ba6",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCoinAmount",
									"nameLocation": "482:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:2:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "521:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:9:2"
									},
									"scope": 173,
									"src": "473:94:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "595:181:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 156,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "628:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "628:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 158,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 53,
																		"src": "644:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "644:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "628:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 161,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 53,
																		"src": "655:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "655:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 163,
																		"name": "tx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967270,
																		"src": "666:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_transaction",
																			"typeString": "tx"
																		}
																	},
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "origin",
																	"nodeType": "MemberAccess",
																	"src": "666:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "655:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "628:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f2063616c6c2074686973206d6574686f6420796f75206861766520746f206265206f776e6572206f722073756241646d696e21",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "690:55:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16cd6d2c5ac27ab3f7d27012db321134742d450f3ab73321f0a3bc14b6c5233",
																"typeString": "literal_string \"To call this method you have to be owner or subAdmin!\""
															},
															"value": "To call this method you have to be owner or subAdmin!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16cd6d2c5ac27ab3f7d27012db321134742d450f3ab73321f0a3bc14b6c5233",
																"typeString": "literal_string \"To call this method you have to be owner or subAdmin!\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "606:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "606:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "606:150:2"
											},
											{
												"id": 170,
												"nodeType": "PlaceholderStatement",
												"src": "767:1:2"
											}
										]
									},
									"id": 172,
									"name": "theOwner",
									"nameLocation": "584:8:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:2:2"
									},
									"src": "575:201:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 174,
							"src": "106:673:2",
							"usedErrors": []
						}
					],
					"src": "52:729:2"
				},
				"id": 2
			}
		}
	}
}